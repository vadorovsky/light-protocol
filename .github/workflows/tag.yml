name: Auto Tag Release

on:
  push:
    branches:
      - main

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Auto Tag
        run: |
          COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
          if [[ "$COMMIT_AUTHOR" == "github-actions"* ]]; then
            CHANGED_FILES=$(git --no-pager show @ --name-only)
            echo "$CHANGED_FILES"
            PACKAGE_NAME=""

            if [[ "$CHANGED_FILES" == *"circuit-lib/circuit-lib.js"* ]]; then
              PACKAGE_NAME="circuit-lib.js"
            elif [[ "$CHANGED_FILES" == *"cli"* ]]; then
              PACKAGE_NAME="cli"
            elif [[ "$CHANGED_FILES" == *"js/compressed-token"* ]]; then
              PACKAGE_NAME="compressed-token"
            elif [[ "$CHANGED_FILES" == *"js/stateless.js"* ]]; then
              PACKAGE_NAME="stateless.js"
            elif [[ "$CHANGED_FILES" == *"prover.js"* ]]; then
              PACKAGE_NAME="prover.js"
            elif [[ "$CHANGED_FILES" == *"macros/aligned-sized"* ]]; then
              PACKAGE_NAME="aligned-sized"
            elif [[ "$CHANGED_FILES" == *"macros/light"* ]]; then
              PACKAGE_NAME="light-macros"
            elif [[ "$CHANGED_FILES" == *"merkle-tree/bounded-vec"* ]]; then
              PACKAGE_NAME="light-bounded-vec"
            elif [[ "$CHANGED_FILES" == *"merkle-tree/concurrent"* ]]; then
              PACKAGE_NAME="light-concurrent-merkle-tree"
            elif [[ "$CHANGED_FILES" == *"merkle-tree/hash-set"* ]]; then
              PACKAGE_NAME="light-hash-set"
            elif [[ "$CHANGED_FILES" == *"merkle-tree/hasher"* ]]; then
              PACKAGE_NAME="light-hasher"
            elif [[ "$CHANGED_FILES" == *"merkle-tree/indexed"* ]]; then
              PACKAGE_NAME="light-indexed-merkle-tree"
            elif [[ "$CHANGED_FILES" == *"merkle-tree/reference"* ]]; then
              PACKAGE_NAME="light-merkle-tree-reference"
            elif [[ "$CHANGED_FILES" == *"programs/account-compression"* ]]; then
              PACKAGE_NAME="account-compression"
            elif [[ "$CHANGED_FILES" == *"programs/compressed-pda"* ]]; then
              PACKAGE_NAME="light-compressed-pda"
            elif [[ "$CHANGED_FILES" == *"programs/compressed-token"* ]]; then
              PACKAGE_NAME="light-compressed-token"
            elif [[ "$CHANGED_FILES" == *"programs/registry"* ]]; then
              PACKAGE_NAME="light-registry"
            fi
            echo "Creating tag for package: $PACKAGE_NAME"

            if [[ -n "$PACKAGE_NAME" ]]; then
              NEW_TAG="v$(cargo metadata --format-version=1  | jq -r ".packages[] | select(.name == \"$PACKAGE_NAME\") | .version" | head -n 1)"
              git config user.name "GitHub Actions"
              git config user.email "github-actions@github.com"
              git tag "${PACKAGE_NAME}-${NEW_TAG}"
              git push origin "${PACKAGE_NAME}-${NEW_TAG}"
            fi
          fi
